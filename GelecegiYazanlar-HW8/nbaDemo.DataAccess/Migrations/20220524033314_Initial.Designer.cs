// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nbaDemo.DataAccess.Data;

namespace nbaDemo.DataAccess.Migrations
{
    [DbContext(typeof(NbaDbContext))]
    [Migration("20220524033314_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("nbaDemo.Entities.Conference", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Conferences");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Logo = "https://seeklogo.com/images/N/nba-eastern-conference-logo-0B7E499625-seeklogo.com.png",
                            Name = "Eastern Conference"
                        },
                        new
                        {
                            ID = 2,
                            Logo = "https://seeklogo.com/images/N/nba-western-conference-logo-CD123BABD3-seeklogo.com.png",
                            Name = "Western Conference"
                        });
                });

            modelBuilder.Entity("nbaDemo.Entities.Division", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Divisions");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Southeast Division"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Atlantic Division"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Northwest Division"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Central Division"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Southwest Division"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Pacific Division"
                        });
                });

            modelBuilder.Entity("nbaDemo.Entities.Player", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DraftInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JerseyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastAttended")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PositionID");

                    b.HasIndex("TeamID");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Age = "24 years",
                            Country = "USA",
                            DateOfBirth = "July 18, 1997",
                            DraftInfo = "2017 R1 Pick 14",
                            Experience = "4 years",
                            FullName = "Bam Adebayo",
                            Height = "6 ft 9 in | (2.06m)",
                            IsActive = true,
                            JerseyNumber = "#13",
                            LastAttended = "Kentucky",
                            PositionID = 4,
                            ProfileImage = "https://cdn.nba.com/headshots/nba/latest/1040x760/1628389.png",
                            TeamID = 1,
                            Weight = "255lb | 116kg"
                        },
                        new
                        {
                            ID = 2,
                            Age = "22 years",
                            Country = "Nigeria",
                            DateOfBirth = "September 19, 1999",
                            DraftInfo = "2020 R1 Pick 20",
                            Experience = "1 year",
                            FullName = "Precious Achiuwa",
                            Height = "6 ft 8 in | (2.03m)",
                            IsActive = true,
                            JerseyNumber = "#13",
                            LastAttended = "Memphis",
                            PositionID = 2,
                            ProfileImage = "https://cdn.nba.com/headshots/nba/latest/1040x760/1630173.png",
                            TeamID = 2,
                            Weight = "225lb | 102kg"
                        },
                        new
                        {
                            ID = 3,
                            Age = "29 years",
                            Country = "France",
                            DateOfBirth = "June 26, 1992",
                            DraftInfo = "2013 R1 Pick 27",
                            Experience = "8 years",
                            FullName = "Rudy Gobert",
                            Height = "7 ft 1 in | (2.16m)",
                            IsActive = true,
                            JerseyNumber = "#27",
                            LastAttended = "Cholet",
                            PositionID = 1,
                            ProfileImage = "https://cdn.nba.com/headshots/nba/latest/1040x760/203497.png",
                            TeamID = 3,
                            Weight = "258lb | 117kg"
                        });
                });

            modelBuilder.Entity("nbaDemo.Entities.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Center"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Forward"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Guard"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Center-Forward"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Guard-Forward"
                        });
                });

            modelBuilder.Entity("nbaDemo.Entities.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Arena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConferenceID")
                        .HasColumnType("int");

                    b.Property<string>("CurrentOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DivisionID")
                        .HasColumnType("int");

                    b.Property<string>("FoundationYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadCoach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ConferenceID");

                    b.HasIndex("DivisionID");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Arena = "FTX Arena",
                            ConferenceID = 1,
                            CurrentOwner = "Micky Arison",
                            DivisionID = 1,
                            FoundationYear = "1988",
                            HeadCoach = "Erik Spoelstra",
                            Logo = "https://cdn.nba.com/logos/nba/1610612748/global/L/logo.svg",
                            Name = "Miami Heat"
                        },
                        new
                        {
                            ID = 2,
                            Arena = "Scotiabank Arena",
                            ConferenceID = 1,
                            CurrentOwner = "Maple Leaf Sports and Entertainment",
                            DivisionID = 2,
                            FoundationYear = "1995",
                            HeadCoach = "Nick Nurse",
                            Logo = "https://cdn.nba.com/logos/nba/1610612761/global/L/logo.svg",
                            Name = "Toronto Raptors"
                        },
                        new
                        {
                            ID = 3,
                            Arena = "Vivint Arena",
                            ConferenceID = 2,
                            CurrentOwner = "Ryan Smith",
                            DivisionID = 3,
                            FoundationYear = "1974",
                            HeadCoach = "Quin Snyder",
                            Logo = "https://cdn.nba.com/logos/nba/1610612762/global/L/logo.svg",
                            Name = "Utah Jazz"
                        });
                });

            modelBuilder.Entity("nbaDemo.Entities.Player", b =>
                {
                    b.HasOne("nbaDemo.Entities.Position", "Position")
                        .WithMany("Players")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("nbaDemo.Entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Position");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("nbaDemo.Entities.Team", b =>
                {
                    b.HasOne("nbaDemo.Entities.Conference", "Conference")
                        .WithMany("Teams")
                        .HasForeignKey("ConferenceID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("nbaDemo.Entities.Division", "Division")
                        .WithMany("Teams")
                        .HasForeignKey("DivisionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Conference");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("nbaDemo.Entities.Conference", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("nbaDemo.Entities.Division", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("nbaDemo.Entities.Position", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("nbaDemo.Entities.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
